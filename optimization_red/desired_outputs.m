function [hd,dhd] = desired_outputs(theta,alpha,theta_minus,theta_plus)
%DESIRED_OUTPUTS
%    [HD,DHD] = DESIRED_OUTPUTS(IN1,THETA,THETA_MINUS,THETA_PLUS)

%    This function was generated by the Symbolic Math Toolbox version 8.4.
%    06-Jul-2020 07:31:02


a01=alpha(1,1); a11=alpha(1,2); a21=alpha(1,3); a31=alpha(1,4); a41 = alpha(1,5); a51 = alpha(1,6); a61 = alpha(1,7);
a02=alpha(2,1); a12=alpha(2,2); a22=alpha(2,3); a32=alpha(2,4); a42 = alpha(2,5); a52 = alpha(2,6); a62 = alpha(2,7);
a03=alpha(3,1); a13=alpha(3,2); a23=alpha(3,3); a33=alpha(3,4); a43 = alpha(3,5); a53 = alpha(3,6); a63 = alpha(3,7);
a04=alpha(4,1); a14=alpha(4,2); a24=alpha(4,3); a34=alpha(4,4); a44 = alpha(4,5); a54 = alpha(4,6); a64 = alpha(4,7);

hd = [a61.*(theta-theta_plus).^6.*1.0./(theta_plus-theta_minus).^6+a01.*(theta-theta_minus).^6.*1.0./(theta_plus-theta_minus).^6-a11.*(theta-theta_plus).*(theta-theta_minus).^5.*1.0./(theta_plus-theta_minus).^6.*6.0-a51.*(theta-theta_plus).^5.*(theta-theta_minus).*1.0./(theta_plus-theta_minus).^6.*6.0+a21.*(theta-theta_plus).^2.*(theta-theta_minus).^4.*1.0./(theta_plus-theta_minus).^6.*1.5e+1-a31.*(theta-theta_plus).^3.*(theta-theta_minus).^3.*1.0./(theta_plus-theta_minus).^6.*2.0e+1+a41.*(theta-theta_plus).^4.*(theta-theta_minus).^2.*1.0./(theta_plus-theta_minus).^6.*1.5e+1,a62.*(theta-theta_plus).^6.*1.0./(theta_plus-theta_minus).^6+a02.*(theta-theta_minus).^6.*1.0./(theta_plus-theta_minus).^6-a12.*(theta-theta_plus).*(theta-theta_minus).^5.*1.0./(theta_plus-theta_minus).^6.*6.0-a52.*(theta-theta_plus).^5.*(theta-theta_minus).*1.0./(theta_plus-theta_minus).^6.*6.0+a22.*(theta-theta_plus).^2.*(theta-theta_minus).^4.*1.0./(theta_plus-theta_minus).^6.*1.5e+1-a32.*(theta-theta_plus).^3.*(theta-theta_minus).^3.*1.0./(theta_plus-theta_minus).^6.*2.0e+1+a42.*(theta-theta_plus).^4.*(theta-theta_minus).^2.*1.0./(theta_plus-theta_minus).^6.*1.5e+1,a63.*(theta-theta_plus).^6.*1.0./(theta_plus-theta_minus).^6+a03.*(theta-theta_minus).^6.*1.0./(theta_plus-theta_minus).^6-a13.*(theta-theta_plus).*(theta-theta_minus).^5.*1.0./(theta_plus-theta_minus).^6.*6.0-a53.*(theta-theta_plus).^5.*(theta-theta_minus).*1.0./(theta_plus-theta_minus).^6.*6.0+a23.*(theta-theta_plus).^2.*(theta-theta_minus).^4.*1.0./(theta_plus-theta_minus).^6.*1.5e+1-a33.*(theta-theta_plus).^3.*(theta-theta_minus).^3.*1.0./(theta_plus-theta_minus).^6.*2.0e+1+a43.*(theta-theta_plus).^4.*(theta-theta_minus).^2.*1.0./(theta_plus-theta_minus).^6.*1.5e+1,a64.*(theta-theta_plus).^6.*1.0./(theta_plus-theta_minus).^6+a04.*(theta-theta_minus).^6.*1.0./(theta_plus-theta_minus).^6-a14.*(theta-theta_plus).*(theta-theta_minus).^5.*1.0./(theta_plus-theta_minus).^6.*6.0-a54.*(theta-theta_plus).^5.*(theta-theta_minus).*1.0./(theta_plus-theta_minus).^6.*6.0+a24.*(theta-theta_plus).^2.*(theta-theta_minus).^4.*1.0./(theta_plus-theta_minus).^6.*1.5e+1-a34.*(theta-theta_plus).^3.*(theta-theta_minus).^3.*1.0./(theta_plus-theta_minus).^6.*2.0e+1+a44.*(theta-theta_plus).^4.*(theta-theta_minus).^2.*1.0./(theta_plus-theta_minus).^6.*1.5e+1];
if nargout > 1
    dhd = [-((theta-theta_plus).^5.*1.0./(theta_plus-theta_minus).^5.*(a51.*6.0-a61.*6.0)-(theta-theta_minus).^5.*1.0./(theta_plus-theta_minus).^5.*(a01.*6.0-a11.*6.0)-(theta-theta_plus).^2.*(theta-theta_minus).^3.*1.0./(theta_plus-theta_minus).^5.*(a21.*6.0e+1-a31.*6.0e+1)+(theta-theta_plus).^3.*(theta-theta_minus).^2.*1.0./(theta_plus-theta_minus).^5.*(a31.*6.0e+1-a41.*6.0e+1)+(theta-theta_plus).*(theta-theta_minus).^4.*1.0./(theta_plus-theta_minus).^5.*(a11.*3.0e+1-a21.*3.0e+1)-(theta-theta_plus).^4.*(theta-theta_minus).*1.0./(theta_plus-theta_minus).^5.*(a41.*3.0e+1-a51.*3.0e+1))./(theta_plus-theta_minus),-((theta-theta_plus).^5.*1.0./(theta_plus-theta_minus).^5.*(a52.*6.0-a62.*6.0)-(theta-theta_minus).^5.*1.0./(theta_plus-theta_minus).^5.*(a02.*6.0-a12.*6.0)-(theta-theta_plus).^2.*(theta-theta_minus).^3.*1.0./(theta_plus-theta_minus).^5.*(a22.*6.0e+1-a32.*6.0e+1)+(theta-theta_plus).^3.*(theta-theta_minus).^2.*1.0./(theta_plus-theta_minus).^5.*(a32.*6.0e+1-a42.*6.0e+1)+(theta-theta_plus).*(theta-theta_minus).^4.*1.0./(theta_plus-theta_minus).^5.*(a12.*3.0e+1-a22.*3.0e+1)-(theta-theta_plus).^4.*(theta-theta_minus).*1.0./(theta_plus-theta_minus).^5.*(a42.*3.0e+1-a52.*3.0e+1))./(theta_plus-theta_minus),-((theta-theta_plus).^5.*1.0./(theta_plus-theta_minus).^5.*(a53.*6.0-a63.*6.0)-(theta-theta_minus).^5.*1.0./(theta_plus-theta_minus).^5.*(a03.*6.0-a13.*6.0)-(theta-theta_plus).^2.*(theta-theta_minus).^3.*1.0./(theta_plus-theta_minus).^5.*(a23.*6.0e+1-a33.*6.0e+1)+(theta-theta_plus).^3.*(theta-theta_minus).^2.*1.0./(theta_plus-theta_minus).^5.*(a33.*6.0e+1-a43.*6.0e+1)+(theta-theta_plus).*(theta-theta_minus).^4.*1.0./(theta_plus-theta_minus).^5.*(a13.*3.0e+1-a23.*3.0e+1)-(theta-theta_plus).^4.*(theta-theta_minus).*1.0./(theta_plus-theta_minus).^5.*(a43.*3.0e+1-a53.*3.0e+1))./(theta_plus-theta_minus),-((theta-theta_plus).^5.*1.0./(theta_plus-theta_minus).^5.*(a54.*6.0-a64.*6.0)-(theta-theta_minus).^5.*1.0./(theta_plus-theta_minus).^5.*(a04.*6.0-a14.*6.0)-(theta-theta_plus).^2.*(theta-theta_minus).^3.*1.0./(theta_plus-theta_minus).^5.*(a24.*6.0e+1-a34.*6.0e+1)+(theta-theta_plus).^3.*(theta-theta_minus).^2.*1.0./(theta_plus-theta_minus).^5.*(a34.*6.0e+1-a44.*6.0e+1)+(theta-theta_plus).*(theta-theta_minus).^4.*1.0./(theta_plus-theta_minus).^5.*(a14.*3.0e+1-a24.*3.0e+1)-(theta-theta_plus).^4.*(theta-theta_minus).*1.0./(theta_plus-theta_minus).^5.*(a44.*3.0e+1-a54.*3.0e+1))./(theta_plus-theta_minus)];
end
