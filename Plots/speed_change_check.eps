%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Microsoft Windows 7 Enterprise .
%%Title: C:\Users\veer\Documents\MATLAB\my_codes\Switching Controls\Different Force Fixed Points\Plots\speed_change_check.eps
%%CreationDate: 01/29/2017  00:41:43
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   -74   134   688   657
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   -74   134   688   657
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0888 7884 csm

    0     0  9151  6273 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 9152 6274 rf
6 w
0 5113 7092 0 0 -5113 1190 5583 4 MP
PP
-7092 0 0 5113 7092 0 0 -5113 1190 5583 5 MP stroke
4 w
DO
SO
6 w
0 sg
1190  470 mt 8282  470 L
1190 5583 mt 8282 5583 L
8282 5583 mt 8282  470 L
1190 5583 mt 1190  470 L
1190 5583 mt 8282 5583 L
1190 5583 mt 1190  470 L
1190 5583 mt 1190 5512 L
1190  470 mt 1190  540 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 240 FMSR

1124 5840 mt 
(0) s
2024 5583 mt 2024 5512 L
2024  470 mt 2024  540 L
1891 5840 mt 
(10) s
2858 5583 mt 2858 5512 L
2858  470 mt 2858  540 L
2725 5840 mt 
(20) s
3693 5583 mt 3693 5512 L
3693  470 mt 3693  540 L
3560 5840 mt 
(30) s
4527 5583 mt 4527 5512 L
4527  470 mt 4527  540 L
4394 5840 mt 
(40) s
5361 5583 mt 5361 5512 L
5361  470 mt 5361  540 L
5228 5840 mt 
(50) s
6196 5583 mt 6196 5512 L
6196  470 mt 6196  540 L
6063 5840 mt 
(60) s
7030 5583 mt 7030 5512 L
7030  470 mt 7030  540 L
6897 5840 mt 
(70) s
7864 5583 mt 7864 5512 L
7864  470 mt 7864  540 L
7731 5840 mt 
(80) s
1190 5583 mt 1260 5583 L
8282 5583 mt 8211 5583 L
 822 5672 mt 
(0.4) s
1190 5014 mt 1260 5014 L
8282 5014 mt 8211 5014 L
 688 5103 mt 
(0.45) s
1190 4446 mt 1260 4446 L
8282 4446 mt 8211 4446 L
 822 4535 mt 
(0.5) s
1190 3878 mt 1260 3878 L
8282 3878 mt 8211 3878 L
 688 3967 mt 
(0.55) s
1190 3310 mt 1260 3310 L
8282 3310 mt 8211 3310 L
 822 3399 mt 
(0.6) s
1190 2742 mt 1260 2742 L
8282 2742 mt 8211 2742 L
 688 2831 mt 
(0.65) s
1190 2174 mt 1260 2174 L
8282 2174 mt 8211 2174 L
 822 2263 mt 
(0.7) s
1190 1606 mt 1260 1606 L
8282 1606 mt 8211 1606 L
 688 1695 mt 
(0.75) s
1190 1038 mt 1260 1038 L
8282 1038 mt 8211 1038 L
 822 1127 mt 
(0.8) s
1190  470 mt 8282  470 L
1190 5583 mt 8282 5583 L
8282 5583 mt 8282  470 L
1190 5583 mt 1190  470 L
gs 1190 470 7093 5114 rc
240 w
gr

240 w
56 W
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
1190 1023 PD
56 W
1219 1154 PD
56 W
1250 1286 PD
56 W
1280 1387 PD
56 W
1311 1476 PD
56 W
1343 1548 PD
56 W
1374 1614 PD
56 W
1406 1664 PD
56 W
1438 1713 PD
56 W
1471 1745 PD
56 W
1503 1783 PD
56 W
1536 1810 PD
56 W
1568 1827 PD
56 W
1601 1850 PD
56 W
1634 1868 PD
56 W
1667 1884 PD
56 W
1700 1892 PD
56 W
1733 1904 PD
56 W
1766 1981 PD
56 W
1799 2042 PD
56 W
1833 2101 PD
56 W
1866 2165 PD
56 W
1901 2199 PD
56 W
1935 2241 PD
56 W
1969 2282 PD
56 W
2004 2304 PD
56 W
2039 2330 PD
56 W
2073 2347 PD
56 W
2108 2366 PD
56 W
2143 2374 PD
56 W
2178 2392 PD
56 W
2213 2396 PD
56 W
2249 2454 PD
56 W
2284 2484 PD
56 W
2319 2530 PD
56 W
2355 2567 PD
56 W
2391 2597 PD
56 W
2427 2625 PD
56 W
2463 2657 PD
56 W
2500 2665 PD
56 W
2536 2681 PD
56 W
2573 2690 PD
56 W
2609 2697 PD
56 W
2646 2708 PD
56 W
2682 2725 PD
56 W
2719 2729 PD
56 W
2756 2747 PD
56 W
2792 2762 PD
56 W
2829 2764 PD
56 W
2866 2775 PD
56 W
2903 2808 PD
56 W
2940 2844 PD
56 W
2978 2870 PD
56 W
3015 2893 PD
56 W
3052 2918 PD
56 W
3090 2937 PD
56 W
3128 2949 PD
56 W
3166 2968 PD
56 W
3204 2985 PD
56 W
3242 3007 PD
56 W
3280 3028 PD
56 W
3318 3072 PD
56 W
3357 3083 PD
56 W
3395 3098 PD
56 W
3434 3110 PD
56 W
3472 3132 PD
56 W
3511 3139 PD
56 W
3550 3169 PD
56 W
3589 3181 PD
56 W
3628 3201 PD
56 W
3667 3225 PD
56 W
3707 3237 PD
56 W
3746 3240 PD
56 W
3786 3255 PD
56 W
3825 3269 PD
56 W
3865 3296 PD
56 W
3904 3321 PD
56 W
3944 3353 PD
56 W
3984 3375 PD
56 W
4025 3392 PD
56 W
4065 3420 PD
56 W
4105 3422 PD
56 W
4146 3440 PD
56 W
4187 3470 PD
56 W
4227 3498 PD
56 W
4268 3518 PD
56 W
4309 3539 PD
56 W
4350 3556 PD
56 W
4392 3574 PD
56 W
4433 3591 PD
56 W
4475 3608 PD
56 W
4516 3614 PD
56 W
4558 3663 PD
56 W
4600 3704 PD
56 W
4642 3721 PD
56 W
4685 3765 PD
56 W
4727 3785 PD
56 W
4770 3810 PD
56 W
4813 3846 PD
56 W
4856 3851 PD
56 W
4900 3862 PD
56 W
4943 3922 PD
56 W
4987 3946 PD
56 W
5031 4004 PD
56 W
5075 4030 PD
56 W
5120 4052 PD
56 W
5164 4075 PD
56 W
5209 4098 PD
56 W
5254 4121 PD
56 W
5300 4127 PD
56 W
5345 4135 PD
56 W
5390 4212 PD
56 W
5436 4283 PD
56 W
5482 4345 PD
56 W
5529 4388 PD
56 W
5577 4441 PD
56 W
5624 4477 PD
56 W
5673 4510 PD
56 W
5721 4540 PD
56 W
5769 4567 PD
56 W
5818 4588 PD
56 W
5867 4607 PD
56 W
5917 4627 PD
56 W
5966 4696 PD
56 W
6016 4777 PD
56 W
6067 4865 PD
56 W
6118 4924 PD
56 W
6170 4979 PD
56 W
6223 5026 PD
56 W
6276 5067 PD
56 W
6330 5092 PD
56 W
6384 5132 PD
56 W
6438 5154 PD
56 W
6493 5179 PD
56 W
6548 5204 PD
56 W
6603 5222 PD
56 W
6658 5231 PD
56 W
6714 5245 PD
56 W
6770 5257 PD
56 W
6825 5277 PD
56 W
6881 5287 PD
56 W
6937 5293 PD
56 W
6994 4575 PD
56 W
7043 3804 PD
56 W
7085 3241 PD
56 W
7125 2804 PD
56 W
7162 2457 PD
56 W
7197 2176 PD
56 W
7232 1954 PD
56 W
7265 1771 PD
56 W
7297 1624 PD
56 W
7329 1491 PD
56 W
7361 1394 PD
56 W
7392 1315 PD
56 W
7423 1241 PD
56 W
7453 1175 PD
56 W
7483 1129 PD
56 W
7514 1090 PD
56 W
7544 1058 PD
56 W
7574 1029 PD
56 W
7604 1005 PD
56 W
7633 987 PD
56 W
7663 959 PD
56 W
7693 951 PD
56 W
7722 941 PD
56 W
7752 932 PD
56 W
7781 924 PD
56 W
7811 917 PD
56 W
7840 919 PD
56 W
7870 912 PD
56 W
7899 898 PD
56 W
7929 897 PD
56 W
7958 901 PD
56 W
7988 895 PD
gs 1190 470 7093 5114 rc
24 w
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
8 0 9 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 9 0 8 0 4435 5355 300 MP stroke
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 1940 5355 300 MP stroke
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 1190 5355 91 MP stroke
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 9 0 6937 810 126 MP stroke
gr

24 w
c9
0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 288 FMSR

4207 6107 mt 
(Time \(s\)) s
 569 4377 mt  -90 rotate
(Average Speed \(m/s\)) s
90 rotate
6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
