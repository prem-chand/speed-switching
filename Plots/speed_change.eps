%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Microsoft Windows 7 Enterprise .
%%Title: C:\Users\veer\Documents\MATLAB\my_codes\Switching Controls\Different Force Fixed Points\Plots\speed_change.eps
%%CreationDate: 01/28/2017  23:39:25
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   -72   139   685   653
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   -72   139   685   653
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0864 7836 csm

    0     0  9088  6165 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 9089 6166 rf
6 w
0 5025 7044 0 0 -5025 1181 5487 4 MP
PP
-7044 0 0 5025 7044 0 0 -5025 1181 5487 5 MP stroke
4 w
DO
SO
6 w
0 sg
1181  462 mt 8225  462 L
1181 5487 mt 8225 5487 L
8225 5487 mt 8225  462 L
1181 5487 mt 1181  462 L
1181 5487 mt 8225 5487 L
1181 5487 mt 1181  462 L
1181 5487 mt 1181 5416 L
1181  462 mt 1181  532 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 240 FMSR

1115 5744 mt 
(0) s
2009 5487 mt 2009 5416 L
2009  462 mt 2009  532 L
1876 5744 mt 
(10) s
2838 5487 mt 2838 5416 L
2838  462 mt 2838  532 L
2705 5744 mt 
(20) s
3667 5487 mt 3667 5416 L
3667  462 mt 3667  532 L
3534 5744 mt 
(30) s
4495 5487 mt 4495 5416 L
4495  462 mt 4495  532 L
4362 5744 mt 
(40) s
5324 5487 mt 5324 5416 L
5324  462 mt 5324  532 L
5191 5744 mt 
(50) s
6153 5487 mt 6153 5416 L
6153  462 mt 6153  532 L
6020 5744 mt 
(60) s
6981 5487 mt 6981 5416 L
6981  462 mt 6981  532 L
6848 5744 mt 
(70) s
7810 5487 mt 7810 5416 L
7810  462 mt 7810  532 L
7677 5744 mt 
(80) s
1181 5487 mt 1251 5487 L
8225 5487 mt 8154 5487 L
 813 5576 mt 
(0.4) s
1181 4928 mt 1251 4928 L
8225 4928 mt 8154 4928 L
 679 5017 mt 
(0.45) s
1181 4370 mt 1251 4370 L
8225 4370 mt 8154 4370 L
 813 4459 mt 
(0.5) s
1181 3811 mt 1251 3811 L
8225 3811 mt 8154 3811 L
 679 3900 mt 
(0.55) s
1181 3253 mt 1251 3253 L
8225 3253 mt 8154 3253 L
 813 3342 mt 
(0.6) s
1181 2695 mt 1251 2695 L
8225 2695 mt 8154 2695 L
 679 2784 mt 
(0.65) s
1181 2136 mt 1251 2136 L
8225 2136 mt 8154 2136 L
 813 2225 mt 
(0.7) s
1181 1578 mt 1251 1578 L
8225 1578 mt 8154 1578 L
 679 1667 mt 
(0.75) s
1181 1020 mt 1251 1020 L
8225 1020 mt 8154 1020 L
 813 1109 mt 
(0.8) s
1181  462 mt 8225  462 L
1181 5487 mt 8225 5487 L
8225 5487 mt 8225  462 L
1181 5487 mt 1181  462 L
gs 1181 462 7045 5026 rc
240 w
gr

240 w
56 W
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
1181 1006 PD
56 W
1210 1134 PD
56 W
1240 1264 PD
56 W
1271 1364 PD
56 W
1302 1451 PD
56 W
1333 1522 PD
56 W
1364 1587 PD
56 W
1396 1636 PD
56 W
1428 1684 PD
56 W
1460 1715 PD
56 W
1492 1753 PD
56 W
1524 1778 PD
56 W
1557 1796 PD
56 W
1589 1819 PD
56 W
1622 1836 PD
56 W
1654 1852 PD
56 W
1687 1859 PD
56 W
1720 1871 PD
56 W
1753 1947 PD
56 W
1786 2007 PD
56 W
1819 2065 PD
56 W
1853 2128 PD
56 W
1887 2161 PD
56 W
1921 2202 PD
56 W
1955 2243 PD
56 W
1989 2265 PD
56 W
2024 2290 PD
56 W
2058 2306 PD
56 W
2093 2325 PD
56 W
2128 2333 PD
56 W
2163 2351 PD
56 W
2198 2355 PD
56 W
2232 2412 PD
56 W
2268 2442 PD
56 W
2303 2487 PD
56 W
2338 2522 PD
56 W
2374 2552 PD
56 W
2410 2580 PD
56 W
2446 2611 PD
56 W
2482 2619 PD
56 W
2518 2635 PD
56 W
2554 2643 PD
56 W
2590 2651 PD
56 W
2627 2661 PD
56 W
2663 2679 PD
56 W
2700 2682 PD
56 W
2736 2700 PD
56 W
2773 2714 PD
56 W
2809 2717 PD
56 W
2846 2728 PD
56 W
2883 2760 PD
56 W
2919 2795 PD
56 W
2956 2821 PD
56 W
2994 2843 PD
56 W
3031 2868 PD
56 W
3068 2887 PD
56 W
3106 2899 PD
56 W
3143 2917 PD
56 W
3181 2933 PD
56 W
3219 2956 PD
56 W
3257 2976 PD
56 W
3295 3019 PD
56 W
3333 3030 PD
56 W
3371 3044 PD
56 W
3410 3056 PD
56 W
3448 3078 PD
56 W
3487 3085 PD
56 W
3525 3115 PD
56 W
3564 3126 PD
56 W
3603 3146 PD
56 W
3642 3170 PD
56 W
3681 3181 PD
56 W
3720 3184 PD
56 W
3759 3200 PD
56 W
3798 3213 PD
56 W
3838 3240 PD
56 W
3877 3264 PD
56 W
3917 3295 PD
56 W
3956 3317 PD
56 W
3996 3334 PD
56 W
4036 3361 PD
56 W
4077 3363 PD
56 W
4117 3381 PD
56 W
4157 3410 PD
56 W
4198 3438 PD
56 W
4238 3458 PD
56 W
4279 3478 PD
56 W
4320 3495 PD
56 W
4361 3513 PD
56 W
4402 3529 PD
56 W
4444 3546 PD
56 W
4485 3552 PD
56 W
4526 3600 PD
56 W
4568 3640 PD
56 W
4610 3657 PD
56 W
4652 3701 PD
56 W
4694 3720 PD
56 W
4737 3744 PD
56 W
4780 3780 PD
56 W
4823 3785 PD
56 W
4866 3795 PD
56 W
4909 3854 PD
56 W
4952 3879 PD
56 W
4996 3935 PD
56 W
5040 3961 PD
56 W
5084 3983 PD
56 W
5128 4005 PD
56 W
5173 4028 PD
56 W
5218 4050 PD
56 W
5263 4056 PD
56 W
5308 4064 PD
56 W
5353 4140 PD
56 W
5398 4209 PD
56 W
5444 4270 PD
56 W
5491 4313 PD
56 W
5538 4365 PD
56 W
5585 4400 PD
56 W
5633 4433 PD
56 W
5681 4462 PD
56 W
5729 4489 PD
56 W
5778 4509 PD
56 W
5827 4527 PD
56 W
5876 4547 PD
56 W
5925 4615 PD
56 W
5974 4695 PD
56 W
6025 4781 PD
56 W
6076 4840 PD
56 W
6128 4894 PD
56 W
6180 4939 PD
56 W
6233 4980 PD
56 W
6286 5005 PD
56 W
6340 5044 PD
56 W
6394 5066 PD
56 W
6448 5090 PD
56 W
6503 5115 PD
56 W
6557 5133 PD
56 W
6612 5141 PD
56 W
6667 5155 PD
56 W
6723 5166 PD
56 W
6778 5186 PD
56 W
6834 5196 PD
56 W
6890 5202 PD
56 W
6945 4497 PD
56 W
6994 3739 PD
56 W
7037 3185 PD
56 W
7076 2756 PD
56 W
7113 2415 PD
56 W
7148 2139 PD
56 W
7182 1921 PD
56 W
7215 1741 PD
56 W
7247 1596 PD
56 W
7279 1465 PD
56 W
7310 1370 PD
56 W
7341 1293 PD
56 W
7371 1220 PD
56 W
7402 1155 PD
56 W
7432 1110 PD
56 W
7462 1071 PD
56 W
7492 1040 PD
56 W
7521 1011 PD
56 W
7551 988 PD
56 W
7581 970 PD
56 W
7610 943 PD
56 W
7640 935 PD
56 W
7669 925 PD
56 W
7698 916 PD
56 W
7728 908 PD
56 W
7757 901 PD
56 W
7786 903 PD
56 W
7816 896 PD
56 W
7845 882 PD
56 W
7874 881 PD
56 W
7903 886 PD
56 W
7933 880 PD
gs 1181 462 7045 5026 rc
24 w
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
8 0 9 0 8 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 4404 5263 300 MP stroke
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 8 0 9 0 1926 5263 300 MP stroke
8 0 8 0 9 0 8 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 8 0 1181 5263 91 MP stroke
8 0 8 0 9 0 8 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
8 0 9 0 8 0 8 0 9 0 8 0 8 0 8 0 
9 0 8 0 8 0 9 0 8 0 8 0 8 0 9 0 
8 0 8 0 9 0 8 0 8 0 8 0 9 0 8 0 
8 0 9 0 8 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
9 0 8 0 8 0 8 0 9 0 8 0 8 0 9 0 
8 0 8 0 8 0 9 0 8 0 8 0 9 0 8 0 
8 0 8 0 9 0 8 0 8 0 9 0 8 0 8 0 
8 0 9 0 8 0 8 0 9 0 6889 797 126 MP stroke
gr

24 w
c9
0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 288 FMSR

4174 6011 mt 
(Time \(s\)) s
 560 4325 mt  -90 rotate
(Average Speed \(m/s\)) s
90 rotate
6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
