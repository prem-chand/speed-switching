%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Microsoft Windows 7 Enterprise .
%%Title: C:\Users\veer\Documents\MATLAB\my_codes\Switching Controls\Different Force Fixed Points\Plots\Adaptive Speed Switching Supervisor\speed_up_average_speed.eps
%%CreationDate: 02/10/2017  20:53:11
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   -74   121   688   669
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   -74   121   688   669
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0888 8028 csm

    0     0  9151  6570 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 9152 6571 rf
6 w
0 5354 7092 0 0 -5354 1190 5847 4 MP
PP
-7092 0 0 5354 7092 0 0 -5354 1190 5847 5 MP stroke
4 w
DO
SO
6 w
0 sg
1190  493 mt 8282  493 L
1190 5847 mt 8282 5847 L
8282 5847 mt 8282  493 L
1190 5847 mt 1190  493 L
1190 5847 mt 8282 5847 L
1190 5847 mt 1190  493 L
1190 5847 mt 1190 5776 L
1190  493 mt 1190  563 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 240 FMSR

1124 6104 mt 
(0) s
1986 5847 mt 1986 5776 L
1986  493 mt 1986  563 L
1920 6104 mt 
(2) s
2783 5847 mt 2783 5776 L
2783  493 mt 2783  563 L
2717 6104 mt 
(4) s
3580 5847 mt 3580 5776 L
3580  493 mt 3580  563 L
3514 6104 mt 
(6) s
4377 5847 mt 4377 5776 L
4377  493 mt 4377  563 L
4311 6104 mt 
(8) s
5174 5847 mt 5174 5776 L
5174  493 mt 5174  563 L
5041 6104 mt 
(10) s
5971 5847 mt 5971 5776 L
5971  493 mt 5971  563 L
5838 6104 mt 
(12) s
6767 5847 mt 6767 5776 L
6767  493 mt 6767  563 L
6634 6104 mt 
(14) s
7564 5847 mt 7564 5776 L
7564  493 mt 7564  563 L
7431 6104 mt 
(16) s
1190 5847 mt 1260 5847 L
8282 5847 mt 8211 5847 L
 822 5936 mt 
(0.4) s
1190 4907 mt 1260 4907 L
8282 4907 mt 8211 4907 L
 822 4996 mt 
(0.5) s
1190 3968 mt 1260 3968 L
8282 3968 mt 8211 3968 L
 822 4057 mt 
(0.6) s
1190 3029 mt 1260 3029 L
8282 3029 mt 8211 3029 L
 822 3118 mt 
(0.7) s
1190 2089 mt 1260 2089 L
8282 2089 mt 8211 2089 L
 822 2178 mt 
(0.8) s
1190 1150 mt 1260 1150 L
8282 1150 mt 8211 1150 L
 822 1239 mt 
(0.9) s
1190  493 mt 8282  493 L
1190 5847 mt 8282 5847 L
8282 5847 mt 8282  493 L
1190 5847 mt 1190  493 L
gs 1190 493 7093 5355 rc
36 w
gr

36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
  36   36 1418 4948 FO
  36   36 1595 3474 FO
  36   36 1750 2686 FO
  36   36 1884 1615 FO
  36   36 2010 1168 FO
  36   36 2131  883 FO
  36   36 2250  755 FO
  36   36 2367  694 FO
  36   36 2484  685 FO
  36   36 2603  743 FO
  36   36 2725  899 FO
  36   36 2851 1156 FO
  36   36 2982 1431 FO
  36   36 3117 1644 FO
  36   36 3255 1867 FO
  36   36 3397 2030 FO
  36   36 3541 2169 FO
  36   36 3687 2252 FO
  36   36 3834 2303 FO
  36   36 3981 2297 FO
  36   36 4127 2261 FO
  36   36 4272 2191 FO
  36   36 4415 2112 FO
  36   36 4556 2022 FO
  36   36 4696 1952 FO
  36   36 4835 1884 FO
  36   36 4974 1846 FO
  36   36 5112 1825 FO
  36   36 5249 1820 FO
  36   36 5387 1834 FO
  36   36 5526 1862 FO
  36   36 5665 1880 FO
  36   36 5805 1922 FO
  36   36 5945 1956 FO
  36   36 6086 1982 FO
  36   36 6227 2000 FO
  36   36 6368 2015 FO
  36   36 6510 2027 FO
  36   36 6651 2023 FO
  36   36 6793 2019 FO
  36   36 6934 2007 FO
  36   36 7075 1990 FO
  36   36 7215 1984 FO
  36   36 7356 1954 FO
  36   36 7496 1948 FO
  36   36 7636 1944 FO
  36   36 7776 1940 FO
  36   36 7916 1937 FO
  36   36 8056 1944 FO
  36   36 8196 1943 FO
gs 1190 493 7093 5355 rc
DA
24 w
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
7006 0 1190 1964 2 MP stroke
gr

24 w
c9
DA
0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 360 FMSR

4075 6424 mt 
(Time \(s\)) s
 686 4858 mt  -90 rotate
(Average Speed \(m/s\)) s
90 rotate
gs 1190 493 7093 5355 rc
DO
c8
140 -1 140 7 140 -3 140 -4 140 -4 140 -6 141 -30 140 -6 
141 -17 141 -12 142 -4 141 -4 142 12 141 15 141 18 141 26 
140 34 140 42 139 18 139 28 138 14 137 -5 138 -21 139 -38 
139 -68 140 -70 141 -90 143 -79 145 -70 146 -36 147 -6 147 51 
146 83 144 139 142 163 138 223 135 213 131 275 126 257 122 156 
119 58 117 -9 117 -61 119 -128 121 -285 126 -447 134 -1071 155 -788 
177 -1474 1418 4948 50 MP stroke
228 -450 1190 5398 2 MP stroke
SO
36 w
1190 5398 PD
gr

36 w
c8
SO
  36   36 1190 5398 FO
gs 1190 493 7093 5355 rc
6 w
gr

6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
